{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet StudentFormComponent = class StudentFormComponent {\n  constructor(fb, dialog) {\n    this.fb = fb;\n    this.dialog = dialog;\n    this.fname = ``;\n    this.lname = ``;\n    this.wasFormChanged = false;\n  }\n\n  ngOnInit() {\n    this.addStudentForm = this.fb.group({\n      id: null,\n      firstname: [null, [Validators.required, Validators.pattern('[a-zA-Z]+([a-zA-Z ]+)*')]],\n      lastname: [null, [Validators.required, Validators.pattern('[a-zA-Z]+([a-zA-Z ]+)*')]],\n      email: [null, [Validators.required, Validators.email]]\n    });\n    this.breakpoint = window.innerWidth <= 600 ? 1 : 2; // Breakpoint observer code\n  }\n\n  onAddCus() {\n    this.markAsDirty(this.addStudentForm);\n  }\n\n  openDialog() {\n    console.log(this.wasFormChanged);\n    this.dialog.closeAll();\n  } // tslint:disable-next-line:no-any\n\n\n  onResize(event) {\n    this.breakpoint = event.target.innerWidth <= 600 ? 1 : 2;\n  }\n\n  markAsDirty(group) {\n    group.markAsDirty(); // tslint:disable-next-line:forin\n\n    for (const i in group.controls) {\n      group.controls[i].markAsDirty();\n    }\n  }\n\n  formChanged() {\n    this.wasFormChanged = true;\n  }\n\n  onSubmit() {\n    if (!this.addStudentForm.valid) {\n      return;\n    }\n  }\n\n};\nStudentFormComponent = __decorate([Component({\n  selector: 'app-student-form',\n  templateUrl: './student-form.component.html',\n  styleUrls: ['./student-form.component.css']\n})], StudentFormComponent);\nexport { StudentFormComponent };","map":null,"metadata":{},"sourceType":"module"}